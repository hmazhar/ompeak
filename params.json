{"name":"OMPeak","tagline":"An OpenMP benchmarking utility to compare against OpenCL","body":"OMPeak\r\n======\r\n\r\nAn OpenMP benchmarking utility\r\n\r\nThe purpose of this benchmark is to test peak performance of OpenMP code using very simple tests. \r\n\r\n\r\n##Usage:\r\nThis program has one argument which takes the number of threads, if it is not specified the program will run single threaded. \r\n\r\n~~~\r\n\r\n./ompeak #threads (-s) (-ncl)\r\n\r\n-s: run a single test with the number of threads specified\r\n-ncl: do not force the code to use an entire cache line\r\n\r\n~~~\r\n\r\n##Output:\r\n\r\nThe program outputs information in the following way:\r\nA table is generated with each column showing the size of memory transferred (MBytes) and the rows showing the number of openMP threads.\r\n\r\nThree tests are performed, for each test the performance, optimal thread number and memory transfer size are shown\r\n\r\n~~~\r\n\r\n./ompeak 4\r\nMemory transfered in MBytes (column) for a certain number of threads (rows): \r\n   \t 0.25\t 0.50\t 1.00\t 2.00\t 4.00\t 8.00\t 16.00\t 32.00\t 64.00\t 128.00\t 256.00\t 512.00\t\r\nPerforming ReadWrite Test: \r\n  1\t 8.416\t 10.539\t 5.838\t 12.006\t 12.587\t 10.921\t 12.874\t 12.218\t 8.814\t 8.822\t 10.706\t 4.236\t\r\n  2\t 4.279\t 4.804\t 12.840\t 14.832\t 15.624\t 16.343\t 8.361\t 8.947\t 11.327\t 16.779\t 14.974\t 4.916\t\r\n  3\t 8.236\t 13.684\t 14.805\t 16.787\t 15.584\t 18.084\t 17.716\t 11.655\t 13.499\t 16.926\t 17.505\t 5.832\t\r\n  4\t 5.428\t 10.685\t 7.529\t 15.663\t 16.600\t 16.696\t 16.783\t 16.549\t 17.645\t 17.518\t 16.486\t 5.964\t\r\nBest: 3 threads, \t18.084 GB/s, \t8.000 MB \r\nPerforming Read Test: \r\n  1\t 5.523\t 7.302\t 8.044\t 8.015\t 8.508\t 9.695\t 10.173\t 10.655\t 10.910\t 10.652\t 9.995\t 10.706\t\r\n  2\t 3.163\t 5.637\t 6.919\t 8.434\t 9.628\t 10.249\t 11.792\t 13.366\t 13.541\t 14.488\t 14.791\t 14.731\t\r\n  3\t 3.014\t 4.846\t 8.500\t 9.143\t 11.188\t 11.644\t 12.972\t 15.443\t 15.643\t 16.292\t 16.836\t 16.671\t\r\n  4\t 2.981\t 4.250\t 5.929\t 7.575\t 10.976\t 12.064\t 12.739\t 15.443\t 15.007\t 16.938\t 15.817\t 15.565\t\r\nBest: 4 threads, \t16.938 GB/s, \t128.000 MB \r\nPerforming Write Test: \r\n  1\t 9.062\t 9.752\t 9.660\t 9.918\t 9.621\t 9.389\t 8.681\t 8.625\t 8.579\t 8.444\t 8.305\t 8.395\t\r\n  2\t 3.807\t 3.821\t 7.237\t 8.308\t 10.389\t 9.939\t 10.022\t 9.301\t 9.215\t 9.088\t 9.097\t 9.182\t\r\n  3\t 3.170\t 6.187\t 8.275\t 10.436\t 10.015\t 10.214\t 9.680\t 9.226\t 9.097\t 9.256\t 8.964\t 8.756\t\r\n  4\t 2.775\t 4.697\t 4.068\t 9.438\t 9.966\t 9.990\t 9.063\t 9.076\t 8.893\t 8.771\t 8.809\t 8.076\t\r\nBest: 3 threads, \t10.436 GB/s, \t2.000 MB\r\n\r\n~~~\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}